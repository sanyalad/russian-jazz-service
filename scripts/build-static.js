#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –∏–∑ CMS
 * –ó–∞–ø—É—Å–∫: node scripts/build-static.js
 */

const fs = require('fs')
const path = require('path')

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const API_URL = process.env.API_URL || 'http://localhost:3003'
const OUTPUT_DIR = path.join(__dirname, '..', 'public', 'generated')

async function fetchContent() {
  try {
    const response = await fetch(`${API_URL}/api/export-content`)
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`)
    }
    return await response.json()
  } catch (error) {
    console.error('Error fetching content:', error)
    process.exit(1)
  }
}

function generateManifestHTML(principles) {
  const principlesHTML = principles
    .map((principle, index) => `
      <li data-number="${index + 1}">
        <div class="card-header">
          <span class="number">${index + 1}.</span>
          <strong>${principle.title}</strong>
        </div>
        <p>${principle.description}</p>
      </li>
    `)
    .join('')

  return `<!DOCTYPE html>
<html lang="ru">
  <head>
    <meta charset="UTF-8" />
    <title>–ú–∞–Ω–∏—Ñ–µ—Å—Ç ‚Äî Russian Jazz Service</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="mobile-web-app-capable" content="yes">
    <link rel="stylesheet" href="assets/css/main.css" />
  </head>
  <body>
    <!-- –®–ê–ü–ö–ê –°–ê–ô–¢–ê -->
    <header class="site-header">
      <div class="container">
        <div class="logo">
          <a href="../index.html">–°–æ—é–∑ –î–∂–∞–∑–æ–≤—ã—Ö –ú—É–∑—ã–∫–∞–Ω—Ç–æ–≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–∞</a>
        </div>
        <button class="hamburger" aria-label="–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é">
          <span class="hamburger-line"></span>
          <span class="hamburger-line"></span>
          <span class="hamburger-line"></span>
        </button>
        <nav class="main-nav">
          <a href="../index.html" class="nav-link">–ì–ª–∞–≤–Ω–∞—è</a>
          <a href="manifest.html" class="nav-link">–ú–∞–Ω–∏—Ñ–µ—Å—Ç</a>
          <a href="../contacts.html" class="nav-link">–ö–æ–Ω—Ç–∞–∫—Ç—ã</a>
        </nav>
      </div>
    </header>

    <!-- –û–¢–°–¢–£–ü –ü–û–î –®–ê–ü–ö–£ -->
    <div style="height: 60px"></div>

    <!-- –ì–õ–ê–í–ù–´–ô –•–ï–î–ï–† –° –í–ò–î–ï–û -->
    <header class="manifest-header">
      <video autoplay muted loop playsinline class="manifest-video">
        <source src="assets/video/webm/manifest-bg.webm" type="video/webm" />
        –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ.
      </video>
      <div class="manifest-overlay"></div>
      <div class="manifest-content-header">
        <h1>–ú–∞–Ω–∏—Ñ–µ—Å—Ç</h1>
        <p>–†—É—Å—Å–∫–æ–π –°–ª—É–∂–±—ã –î–∂–∞–∑–∞</p>
        <p>(Manifesto of the Russian Jazz Service)</p>
        <a href="../index.html" class="btn">‚Üê –ù–∞–∑–∞–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a>
      </div>
    </header>

    <!-- –ö–û–ù–¢–ï–ù–¢ –ú–ê–ù–ò–§–ï–°–¢–ê -->
    <main class="manifest-content">
      <ol class="manifest-principles">
        ${principlesHTML}
      </ol>

      <div class="manifest-footer">
        <p>
          –≠—Ç–æ—Ç –º–∞–Ω–∏—Ñ–µ—Å—Ç ‚Äî –æ—Å–Ω–æ–≤–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ê—Å—Å–æ—Ü–∏–∞—Ü–∏–∏ "–°–æ—é–∑ –î–∂–∞–∑–æ–≤—ã—Ö
          –ú—É–∑—ã–∫–∞–Ω—Ç–æ–≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–∞".
        </p>
        <a href="../index.html" class="btn">–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a>
      </div>
    </main>

    <footer>
      <p>¬© 2025 Russian Jazz Service</p>
    </footer>
    <script src="assets/js/main.js"></script>
  </body>
</html>`
}

async function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü...')
  
  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –≤—ã–≤–æ–¥–∞
  if (!fs.existsSync(OUTPUT_DIR)) {
    fs.mkdirSync(OUTPUT_DIR, { recursive: true })
  }

  // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –∏–∑ CMS
  console.log('üì° –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –∏–∑ CMS...')
  const content = await fetchContent()
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML –¥–ª—è –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞
  console.log('üìù –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML –¥–ª—è –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞...')
  const manifestHTML = generateManifestHTML(content.principles)
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª—ã
  fs.writeFileSync(path.join(OUTPUT_DIR, 'manifest.html'), manifestHTML)
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º JSON –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ü–µ–ª–µ–π
  fs.writeFileSync(
    path.join(OUTPUT_DIR, 'content.json'), 
    JSON.stringify(content, null, 2)
  )
  
  console.log('‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
  console.log(`üìÅ –§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: ${OUTPUT_DIR}`)
  console.log(`üìä –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤: ${content.principles.length}`)
  console.log(`üéµ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å–æ–±—ã—Ç–∏–π: ${content.events.length}`)
  console.log(`üë• –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∞—Ä—Ç–∏—Å—Ç–æ–≤: ${content.artists.length}`)
}

main().catch(console.error)


