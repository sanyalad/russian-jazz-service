#!/usr/bin/env node

/**
 * –ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Russian Jazz Service
 * 
 * –ö–æ–º–∞–Ω–¥—ã:
 * - npm run dev:admin     - –∑–∞–ø—É—Å–∫ CMS –∞–¥–º–∏–Ω–∫–∏
 * - npm run build:static  - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
 * - npm run serve:static  - –∑–∞–ø—É—Å–∫ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
 * - npm run dev:full      - –∑–∞–ø—É—Å–∫ –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
 */

const { spawn } = require('child_process')
const path = require('path')

const commands = {
  'dev:admin': () => {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ CMS –∞–¥–º–∏–Ω–∫–∏...')
    const adminProcess = spawn('npm', ['run', 'dev'], {
      cwd: path.join(__dirname, '..', 'admin'),
      stdio: 'inherit',
      shell: true,
      env: { ...process.env }
    })
    
    adminProcess.on('close', (code) => {
      console.log(`CMS –∞–¥–º–∏–Ω–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –∫–æ–¥–æ–º ${code}`)
    })
  },

  'build:static': async () => {
    console.log('üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü...')
    const buildProcess = spawn('node', ['build-static.js'], {
      cwd: path.join(__dirname),
      stdio: 'inherit',
      shell: true
    })
    
    buildProcess.on('close', (code) => {
      if (code === 0) {
        console.log('‚úÖ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã!')
        console.log('üìÅ –§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: public/generated/')
      } else {
        console.log(`‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: –∫–æ–¥ ${code}`)
      }
    })
  },

  'serve:static': () => {
    console.log('üåê –ó–∞–ø—É—Å–∫ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞...')
    const serveProcess = spawn('npx', ['serve', 'public', '-p', '8080'], {
      cwd: __dirname,
      stdio: 'inherit',
      shell: true
    })
    
    serveProcess.on('close', (code) => {
      console.log(`–°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω —Å –∫–æ–¥–æ–º ${code}`)
    })
  },

  'dev:full': () => {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞...')
    console.log('üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü...')
    
    // –°–Ω–∞—á–∞–ª–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏–∫—É
    const buildProcess = spawn('node', ['build-static.js'], {
      cwd: path.join(__dirname),
      stdio: 'inherit',
      shell: true
    })
    
    buildProcess.on('close', (code) => {
      if (code === 0) {
        console.log('‚úÖ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≥–æ—Ç–æ–≤—ã!')
        console.log('üöÄ –ó–∞–ø—É—Å–∫ CMS –∞–¥–º–∏–Ω–∫–∏...')
        
        // –ó–∞—Ç–µ–º –∑–∞–ø—É—Å–∫–∞–µ–º –∞–¥–º–∏–Ω–∫—É
        const adminProcess = spawn('npm', ['run', 'dev'], {
          cwd: path.join(__dirname, '..', 'admin'),
          stdio: 'inherit',
          shell: true,
          env: { ...process.env }
        })
        
        adminProcess.on('close', (code) => {
          console.log(`–ü—Ä–æ–µ–∫—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –∫–æ–¥–æ–º ${code}`)
        })
      } else {
        console.log(`‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç–∏–∫–∏: –∫–æ–¥ ${code}`)
      }
    })
  }
}

// –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–∞–Ω–¥—É –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
const command = process.argv[2]

if (commands[command]) {
  commands[command]()
} else {
  console.log('üéµ Russian Jazz Service - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–º')
  console.log('')
  console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:')
  console.log('  npm run dev:admin     - –ó–∞–ø—É—Å–∫ CMS –∞–¥–º–∏–Ω–∫–∏ (localhost:3001)')
  console.log('  npm run build:static - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü')
  console.log('  npm run serve:static - –ó–∞–ø—É—Å–∫ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ (localhost:8080)')
  console.log('  npm run dev:full      - –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞')
  console.log('')
  console.log('–ü—Ä–∏–º–µ—Ä—ã:')
  console.log('  node scripts/manage.js dev:admin')
  console.log('  node scripts/manage.js build:static')
}
