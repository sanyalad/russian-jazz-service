#!/usr/bin/env node

/**
 * –ü—Ä–æ—Å—Ç–æ–π —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è Russian Jazz Service
 */

const http = require('http')
const fs = require('fs')
const path = require('path')
const url = require('url')

const PORT = 8080
const PUBLIC_DIR = path.join(__dirname, '..', 'public')

const mimeTypes = {
  '.html': 'text/html',
  '.css': 'text/css',
  '.js': 'application/javascript',
  '.json': 'application/json',
  '.png': 'image/png',
  '.jpg': 'image/jpeg',
  '.jpeg': 'image/jpeg',
  '.gif': 'image/gif',
  '.svg': 'image/svg+xml',
  '.mp4': 'video/mp4',
  '.webm': 'video/webm',
  '.ico': 'image/x-icon'
}

function getMimeType(filePath) {
  const ext = path.extname(filePath).toLowerCase()
  return mimeTypes[ext] || 'application/octet-stream'
}

function serveFile(res, filePath) {
  fs.readFile(filePath, (err, data) => {
    if (err) {
      res.writeHead(404, { 'Content-Type': 'text/html' })
      res.end(`
        <!DOCTYPE html>
        <html>
        <head><title>404 - Not Found</title></head>
        <body style="font-family: Arial; text-align: center; padding: 50px;">
          <h1>404 - –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</h1>
          <p><a href="/">‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a></p>
        </body>
        </html>
      `)
      return
    }

    const mimeType = getMimeType(filePath)
    res.writeHead(200, { 'Content-Type': mimeType })
    res.end(data)
  })
}

const server = http.createServer((req, res) => {
  const parsedUrl = url.parse(req.url)
  let pathname = parsedUrl.pathname

  // –ï—Å–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è –∫–æ—Ä–µ–Ω—å, –æ—Ç–¥–∞–µ–º index.html
  if (pathname === '/') {
    pathname = '/index.html'
  }

  const filePath = path.join(PUBLIC_DIR, pathname)

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—É–±–ª–∏—á–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
  if (!filePath.startsWith(PUBLIC_DIR)) {
    res.writeHead(403, { 'Content-Type': 'text/html' })
    res.end('<h1>403 - Forbidden</h1>')
    return
  }

  fs.stat(filePath, (err, stats) => {
    if (err || !stats.isFile()) {
      res.writeHead(404, { 'Content-Type': 'text/html' })
      res.end(`
        <!DOCTYPE html>
        <html>
        <head><title>404 - Not Found</title></head>
        <body style="font-family: Arial; text-align: center; padding: 50px;">
          <h1>404 - –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</h1>
          <p><a href="/">‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a></p>
        </body>
        </html>
      `)
      return
    }

    serveFile(res, filePath)
  })
})

server.listen(PORT, () => {
  console.log('üåê –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!')
  console.log(`üìÅ –û–±—Å–ª—É–∂–∏–≤–∞–µ—Ç –ø–∞–ø–∫—É: ${PUBLIC_DIR}`)
  console.log(`üîó –õ–æ–∫–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å: http://localhost:${PORT}`)
  console.log(`üåç –°–µ—Ç–µ–≤–æ–π –∞–¥—Ä–µ—Å: http://192.168.0.102:${PORT}`)
  console.log('')
  console.log('üìÑ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:')
  console.log(`   ‚Ä¢ –ì–ª–∞–≤–Ω–∞—è: http://localhost:${PORT}/`)
  console.log(`   ‚Ä¢ –ú–∞–Ω–∏—Ñ–µ—Å—Ç: http://localhost:${PORT}/rjs-manifest.html`)
  console.log(`   ‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç—ã: http://localhost:${PORT}/contacts.html`)
  console.log(`   ‚Ä¢ –†–µ–∑—É–ª—å—Ç–∞—Ç: http://localhost:${PORT}/result.html`)
  console.log(`   ‚Ä¢ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞–Ω–∏—Ñ–µ—Å—Ç: http://localhost:${PORT}/generated/manifest.html`)
  console.log('')
  console.log('–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞')
})

server.on('error', (err) => {
  if (err.code === 'EADDRINUSE') {
    console.log(`‚ùå –ü–æ—Ä—Ç ${PORT} —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ—Ä—Ç.`)
  } else {
    console.log('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', err.message)
  }
})
